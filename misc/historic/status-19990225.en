:Author: Aaron Digulla
:Copyright: Copyright Â© 1995-2002, The AROS Development Team
:Version: $Revision$
:Date: $Date$

This is an official statement about the current status of the AROS project.

As of writing, the AROS source code is about 29MB and about 56% of all functions
are implemented (13% are in work).

Currently, we are working hard on finishing graphics, layers and intuition based
on our new HIDD system. The HIDD system will allow us to put any kind of
hardware below AROS with only very little effort for people who want/need/have
to write a driver for a new piece of hardware. This work is mostly done by Nils
Henrik Lorentzen and Stefan Berger. The main goal is to have a version of AROS
which can open a screen, create windows on it and let the use manipulate them.
Currently, X11 is used to create the windows and X11 also allows to manipulate
them. The time-frame for this is May.

Michael Schulz has committed very promising code which can be compiled, saved on
a floppy and then be used to boot a small part of AROS on a bare IBM compatible
PC. When the new graphics system is ready, writing a VGA driver should take
a day (if not less) and AROS should be able to open a workbench screen and
windows on it. No workbench yet, though :-) AROS does already boot but it
doesn't do much, yet.

The next step would be to finish the console.device (half of it is already
finished) and put the input.device on top of the HIDD system. This should
integrate X11 (or whatever is below AROS) nicely into the AROS system allowing
to open a shell on an AROS screen. This will be done by Nils and Johan
Alfredsson, who is also working on the Commodities. This should take about one
month.

When the HIDDs for PC hardware are finished (mostly done by Michael Schulz), it
should be possible to boot AROS from a diskette and use a shell to enter some
commands. An FFS file system also seems at the brink of completion, so creating
an Amiga partition and installing it on the hard disk will then soon be
possible. No time frame has been set for all this, yet. It mainly depends on how
much (correct) information books about PC hardware contain, how the code for
Linux looks like and such.

Branko Collin is meanwhile working on improving the documentation (the web pages
are not exactly ... "sexy" :-), fixing the many typos and writing documentation
about how to write documentation.

Kars de Jong is working on the Linux/m68k port of AROS which allows to run
binary Amiga software. Some simple programs already work. When not working on
Layers, Stefan Berger tries to compile programs from Fish disks and AmiNET work
on AROS.

Bernhard Fastenrath and Aaron Digulla work on merging AROS with UAE which should
allow to make UAE faster and run native Amiga programs in an emulator when AROS
is able to run standalone (that is, without the help of Linux). We will
investigate the necessary steps and do tests during March. At the end of the
month, the next step will be decided.

Przemyslaw Szczygielski and Claus Herrmann are looking at PPC support. The
former for a port to LinuxPPC and the latter for making Exec on the Amiga work
on PPC (thus using the power of the PPC to run Amiga software on an Amiga).
Przemo hopes for some results in May and I must convince Claus to merge his code
with ours :-)

What the future might bring, who knows. The main goals right now are making AROS
work as a standalone system which can boot from a hard disk, writing some
drivers for the HIDD system so we can see if everything really fits to where it
belongs, rewrite the most complex part of the AmigaOS: Intuition, Graphics and
Layers.

The future will hopefully see a commercial version of AROS (so that we can pay
Amiga Inc. some money so they keep calm), a free version of AROS (just like
Linux: free without support or commercial with support), many more HIDDs, a port
of AROS to PPC.

But that doesn't mean that you can sit back, relax and watch our progress (which
is now updated daily on http://www.aros.org/progress.gif). We need you!

Currently, more and more parts of AROS are being finished and we need some
real-world code to test AROS. What code would that be? Here are the criteria:

- It must only use pure AmigaOS calls (no MUI or such)
- No hardware banging or calls to things like MrgCop(), CWait() or the like
  (usually functions which directly relate to some Amiga hardware specific
  feature). Most Blitter-Functions are ok, however.
- **No assembler code**!
- It should compile with recent versions of SAS/C, gcc, StormC or another ANSI-C
  compiler.
- They should be not too big (don't send in 1.5MB of source code, yet).

If you happen to have such a gem, then send it to:

    aros-code@aros.fh-konstanz.de

Please make *absolutely clear* if you mind if your code is published with the
source code of AROS or not. We promise that we won't touch any copyright notices
(except for adding them if they are missing, so you get your credit). It's just
that you might not want that the code is revealed for any reason which would be
ok for us. We just need to know :-)
